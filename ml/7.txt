import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix, accuracy_score

def knn_classifier():
    df = pd.read_csv("glass.csv")
    X = df.drop(columns=['Type'])
    y = df['Type']
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
    knn_euclidean = KNeighborsClassifier(n_neighbors=3, metric='euclidean')
    knn_euclidean.fit(X_train, y_train)
    pred_euclidean = knn_euclidean.predict(X_test)
    print("=== Euclidean Distance ===")
    print("Confusion Matrix:\n", confusion_matrix(y_test, pred_euclidean))
    print("Accuracy:", accuracy_score(y_test, pred_euclidean))
    knn_manhattan = KNeighborsClassifier(n_neighbors=3, metric='manhattan')
    knn_manhattan.fit(X_train, y_train)
    pred_manhattan = knn_manhattan.predict(X_test)
    print("\n=== Manhattan Distance ===")
    print("Confusion Matrix:\n", confusion_matrix(y_test, pred_manhattan))
    print("Accuracy:", accuracy_score(y_test, pred_manhattan))

knn_classifier()
